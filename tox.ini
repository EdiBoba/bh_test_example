[tox]
envlist =
    clean-coverage-data
    py37
    py38
    py39
    black
    flake8
    pylint-check
    coverage-report
skip_missing_interpreters = True

[testenv]
deps =
    -r requirements.txt
commands = pytest --cov=source --cov-append

[pytest]
minversion = 6.0
console_output_style = progress
testpaths = pytests
python_files =
    test_*.py
    check_*.py
    example_*.py

; BLACK CONFIG
[tool.black]
line-length = 88

[testenv:black]
deps = black
commands = black source/

[testenv:black-check]
deps = black
commands = black --check source/

; FLAKE8 CONFIG
[flake8]
max-line-length = 88
exclude = .git,__pycache__
ignore = E203,E231

[testenv:flake8-check]
deps = flake8
commands = flake8 --config=tox.ini source/

; CODE COVERAGE CONFIG
[testenv:clean-coverage-data]
deps = coverage
commands = coverage erase

[testenv:coverage-report]
passenv = TOXENV CI TRAVIS TRAVIS_* CODECOV_*
deps =
    coverage
    codecov
commands =
    coverage html
    coverage report --include="source/*" -m
    coverage xml

; PYLINT CONFIG
[MESSAGES CONTROL]
disable =
    C0114

[testenv:pylint-check]
deps =
    {[testenv]deps}
    pylint
commands = pylint --rcfile=tox.ini source/

; BANDIT CONFIG
[bandit]
exclude = .tox,build,dist,tests
targets = source
recursive = true
tests : B101,B102,B301

[testenv:bandit-check]
deps =
    bandit
commands =
    bandit -r source --ini tox.ini

; PYPI upload
[testenv:build-wheel]
deps =
    wheel
commands =
    python setup.py sdist bdist_wheel

[testenv:test-upload]
deps =
    twine
commands =
    twine upload --repository testpypi dist/*

[testenv:pypi-upload]
deps =
    twine
commands =
    twine upload --repository pypi dist/*